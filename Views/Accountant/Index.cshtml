<div class="card">
    <div class="card-header card-header-primary card-header-text py-2">
        <div class="card-text">
            <h4 class="card-title">Stok Yönetimi</h4>
        </div>
    </div>
    <div class="card-body">
        <h6 class="text-primary" style="font-size: 1.2rem !important;">Ürün Yönetimi</h6>
        <div class="control-section">
            <ejs-grid id="GridProducts" height="400px" width="%100" allowExcelExport="true" toolbarClick="toolbarClick" excelExportComplete="excelExportComplete" toolbar='@(new List<string>() {"Search", "Add", "Edit", "ExcelExport"})' allowResizing="true" allowTextWrap="true" locale="tr">
                <e-data-manager adaptor="UrlAdaptor" url="/Product/Get" insertUrl="/Product/Insert" updateUrl="/Product/Update"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="ProductId" headerText="Id" isPrimaryKey="true" visible="false"></e-grid-column>
                    <e-grid-column field="ProductName" headerText="Malzeme Adı"></e-grid-column>
                    <e-grid-column field="ProductTypeId" headerText="Malzeme Türü" foreignKeyValue="ProductTypeName" foreignKeyField="ProductTypeId" dataSource="ViewBag.ProductTypes"></e-grid-column>
                    <e-grid-column field="Piece" headerText="Adet" editType="numericedit" edit='@(new { @params = new Syncfusion.EJ2.Inputs.NumericTextBox() })'></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
        <h6 class="text-primary mt-5" style="font-size: 1.2rem !important;">Stok Girdi Kaydı</h6>
        <div class="control-section">
            <ejs-grid id="GridStockRecords" height="400px" width="%100" allowExcelExport="true" toolbarClick="toolbarClick" excelExportComplete="excelExportComplete" toolbar='@(new List<string>() {"Search", "Add", "Edit", "Delete", "ExcelExport"})' allowResizing="true" allowTextWrap="true" locale="tr">
                <e-data-manager adaptor="UrlAdaptor" url="/StockRecord/Get" insertUrl="/StockRecord/Insert" updateUrl="/StockRecord/Update" removeUrl="/StockRecord/Remove"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowEditing="true" allowDeleting="true" showDeleteConfirmDialog="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="StockRecordId" headerText="Id" isPrimaryKey="true" visible="false"></e-grid-column>
                    <e-grid-column field="InvoiceId" headerText="Fatura No"></e-grid-column>
                    <e-grid-column field="InvoiceDetails" headerText="Fatura Detay"></e-grid-column>
                    <e-grid-column field="RecordDate" headerText="Kayıt Tarihi" format='yMd' editType="datepickeredit" width="80" DefaultValue="@(DateTime.Now)"></e-grid-column>
                    <e-grid-column field="ProductId" headerText="Malzeme" foreignKeyValue="ProductName" foreignKeyField="ProductId" dataSource="ViewBag.Products"></e-grid-column>
                    <e-grid-column field="Piece" headerText="Adet" editType="numericedit" edit='@(new { @params = new Syncfusion.EJ2.Inputs.NumericTextBox() })'></e-grid-column>
                    <e-grid-column field="UnitAmount" headerText="Birim Fiyat" editType="numericedit" edit='@(new { @params = new Syncfusion.EJ2.Inputs.NumericTextBox() })'></e-grid-column>
                    <e-grid-column field="TotalAmount" headerText="Toplam Fiyat" editType="numericedit" edit='@(new { @params = new Syncfusion.EJ2.Inputs.NumericTextBox() })'></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
        <h6 class="text-primary mt-5" style="font-size: 1.2rem !important;">Stok Çıkış Kaydı</h6>
        <div class="control-section">
            <ejs-grid id="GridStockRecordDecs" height="400px" width="%100" allowExcelExport="true" toolbarClick="toolbarClick" excelExportComplete="excelExportComplete" toolbar='@(new List<string>() {"Search", "Add", "Edit", "Delete", "ExcelExport"})' allowResizing="true" allowTextWrap="true" locale="tr">
                <e-data-manager adaptor="UrlAdaptor" url="/StockRecordDecrease/Get" insertUrl="/StockRecordDecrease/Insert" updateUrl="/StockRecordDecrease/Update" removeUrl="/StockRecordDecrease/Remove"></e-data-manager>
                <e-grid-editSettings allowAdding="true" allowEditing="true" allowDeleting="true" showDeleteConfirmDialog="true" mode="Dialog"></e-grid-editSettings>
                <e-grid-columns>
                    <e-grid-column field="StockRecordDecreaseId" headerText="Id" isPrimaryKey="true" visible="false"></e-grid-column>
                    <e-grid-column field="Details" headerText="Detay"></e-grid-column>
                    <e-grid-column field="RecordDate" headerText="Kayıt Tarihi" format='yMd' editType="datepickeredit" width="80" DefaultValue="@(DateTime.Now)"></e-grid-column>
                    <e-grid-column field="ProductId" headerText="Malzeme" foreignKeyValue="ProductName" foreignKeyField="ProductId" dataSource="ViewBag.Products"></e-grid-column>
                    <e-grid-column field="Piece" headerText="Adet" editType="numericedit" edit='@(new { @params = new Syncfusion.EJ2.Inputs.NumericTextBox() })'></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
</div>
<script>
    function toolbarClick(args) {
        if (args.item.id === 'GridProducts_excelexport') {
            var gridObj = document.getElementById("GridProducts").ej2_instances[0];
            var excelExportProperties = {
                 fileName:"Ürünler.xlsx"
            };
            gridObj.showSpinner();
            gridObj.excelExport(excelExportProperties);
        }
        if (args.item.id === 'GridStockRecords_excelexport') {
            var gridObj = document.getElementById("GridStockRecords").ej2_instances[0];
            var excelExportProperties = {
                 fileName:"Stok_Girdi.xlsx"
            };
            gridObj.showSpinner();
            gridObj.excelExport(excelExportProperties);
        }
        if (args.item.id === 'GridStockRecordDecs_excelexport') {
            var gridObj = document.getElementById("GridStockRecordDecs").ej2_instances[0];
            var excelExportProperties = {
                 fileName:"Stok_Çıktı.xlsx"
            };
            gridObj.showSpinner();
            gridObj.excelExport(excelExportProperties);
        }
    }
    function excelExportComplete(args) {
        this.hideSpinner();
    }
</script>

<script type="text/javascript">
    ej.base.L10n.load({
        'tr': {
            'datepicker': {
                'today': 'Bugün'
            },
            'grid': {
                'EmptyRecord': 'Kayıt yok.',
                'Add': 'Ekle',
                'Edit': 'Düzenle',
                'Update': 'Güncelle',
                'Delete': 'Sil',
                'Excelexport': 'Excel Dışa Aktar',
                'GroupDropArea': 'Gruplamak için sütunların başlıklarını sürükleyiniz.',
                'Search': 'Arama',
                'EditOperationAlert': 'Düzenlemek için kayıt seçilmedi.',
                'Save': 'Kaydet',
                'EditFormTitle': 'Kayıt Düzenleme - ',
                'ConfirmDelete': 'Kaydı silmek istediğinize emin misiniz?',
                'AddFormTitle': 'Yeni Kayıt',
                'OKButton': 'Tamam',
                'SaveButton': 'Kaydet',
                'CancelButton': 'İptal',
                'Item': 'kayıt',
                'Items': 'kayıt',
            },
            'pager': {
                'currentPageInfo': '{0}/{1}',
                'totalItemsInfo': '({0} kayıt)',
                'firstPageTooltip': 'İlk Sayfa',
                'lastPageTooltip': 'Son Sayfa',
                'nextPageTooltip': 'Sonraki Sayfa',
                'previousPageTooltip': 'Önceki Sayfa',
                'nextPagerTooltip': 'Sonraki Sayfa',
                'previousPagerTooltip': 'Önceki Sayfa',
                'pagerDropDown' : 'Sayfa başı kayıt',
                'All': 'Tümü'
            }
        }
    });
    loadCultureFiles('tr');
    function loadCultureFiles(name) {
        var files = ['ca-gregorian.json', 'numbers.json', 'timeZoneNames.json', 'dateFields.json'];
        var loader = ej.base.loadCldr;
        var loadCulture = function (prop) {
            var val, ajax;
            ajax = new ej.base.Ajax(location.origin + '/cldr-data/main/' + name + '/' + files[prop], 'GET', false);
            ajax.onSuccess = function (value) { val = value; };
            ajax.send();
            loader(JSON.parse(val));
            ej.base.setCulture('tr');
        };
        for (var prop = 0; prop < files.length; prop++) { loadCulture(prop); }
    }
</script>